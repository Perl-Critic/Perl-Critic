## name Basic passing
## failures 0
## cut

$baz, map "$foo", @list;
print map("$foo", @list);
print ( map "$foo", @list );
@list = ( map $foo, @list );
$aref = [ map $foo, @list ];
$href = { map $foo, @list };

if( map { foo($_) } @list ) {}
for( map { foo($_) } @list ) {}
sub { map { foo($_) } @list }

#-----------------------------------------------------------------------------

## name Basic failure
## failures 8
## cut

map "$foo", @list;
map("$foo", @list);
map { foo($_) } @list;
map({ foo($_) } @list);

if( $condition ){ map { foo($_) } @list }
while( $condition ){ map { foo($_) } @list }
for( @list ){ map { foo($_) } @list }
sub { map { foo($_) } @list; return }

#-----------------------------------------------------------------------------

## name Chained void map
## failures 1
## cut

map { foo($_) }
  map { bar($_) }
    map { baz($_) } @list;

#-----------------------------------------------------------------------------

## name not builtin map
## failures 0
## cut

$self->map('Pennsylvania Ave, Washington, DC');

#-----------------------------------------------------------------------------

## name Subscript map (derived from RT #79289)
## failures 0
## cut

my %hash;

delete @hash{ map { uc $_ } keys %hash };
delete @hash{ map uc( $_ ), keys %hash };
# This is the form analogous to what failed under RT #79289.
delete @hash{ map ( uc( $_ ), keys %hash ) };

#-----------------------------------------------------------------------------

# Local Variables:
#   mode: cperl
#   cperl-indent-level: 4
#   fill-column: 78
#   indent-tabs-mode: nil
#   c-indentation-style: bsd
# End:
# ex: set ts=8 sts=4 sw=4 tw=78 ft=perl expandtab shiftround :
